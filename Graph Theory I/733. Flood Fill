class Solution:
    def floodFill(self, image: List[List[int]], sr: int, sc: int, newColor: int) -> List[List[int]]:
        queue = [[sr, sc]]
        m, n = len(image), len(image[0])
        dirs = [(-1, 0), (1, 0), (0, 1), (0, -1)]
        start_value = image[sr][sc]
        visited = set()
        visited.add((sr, sc))

        while queue:
            row, col = queue.pop(0)
            # Modify the newColor
            image[row][col] = newColor
            # Add 4-directionally cell to queue
            for d_row, d_col in dirs:
                new_row = row + d_row
                new_col = col + d_col
                if 0 <= new_row < m and 0 <= new_col < n and image[new_row][new_col] == start_value and (new_row, new_col) not in visited:
                    queue.append([new_row, new_col])
                    visited.add((new_row, new_col))
        return image