class Solution:
    def closedIsland(self, grid: List[List[int]]) -> int:
        def dfs(row, col):
            if 0 <= row < m and 0 <= col < n and grid[row][col] == 0:
                grid[row][col] = 1
                return dfs(row + 1, col) or dfs(row - 1, col) or dfs(row, col + 1) or dfs(row, col - 1)
        
        m, n = len(grid), len(grid[0])
        res = 0

        for i in range(m):
            dfs(i, 0)
            dfs(i, n-1)
        
        for j in range(n):
            dfs(0, j)
            dfs(m-1, j)

        for i in range(m):
            for j in range(n):
                if grid[i][j] == 0: 
                    dfs(i, j)
                    res += 1
        return res
