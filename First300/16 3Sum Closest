
class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:
        nums.sort()
        res = float('inf')
        n = len(nums)

        for i in range(n-2):
            if i > 0 and nums[i] == nums[i -1]:
                continue
            lo = i + 1
            hi = n - 1

            while lo < hi:
                sums = nums[i] + nums[lo] + nums[hi]
                if sums > target:
                    hi -= 1
                else:
                    lo += 1
                if abs(sums - target) < abs(res - target):
                    res = sums
        return res

时间复杂度： O(n^2)
空间复杂度： O(logn), 额外的排序的空间复杂度