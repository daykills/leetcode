    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        def dfs(path, startIndex, sums):
            if sums == target:
                result.append(path[:])
                return 
            
            for i in range(startIndex, len(candidates)):
                if sums + candidates[i] > target: continue #剪枝
                path.append(candidates[i])
                sums += candidates[i]
                dfs(path, i, sums)
                path.pop()
                sums -= candidates[i]
                
        result = []
        dfs([], 0, 0)
        return result