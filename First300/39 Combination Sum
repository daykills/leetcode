class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        def dfs(startIndex, path):
            if sum(path) == target:
                res.append(path[::])
                return 

            if sum(path) > target:
                return 

            for i in range(startIndex, len(candidates)):
                path.append(candidates[i])
                dfs(i, path)
                path.pop()

        res = []
        dfs(0, [])
        return res