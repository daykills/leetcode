class Solution:
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        candidates.sort()
        def dfs(startIndex, path):
            if sum(path) == target:
                res.append(path[::])
                return 

            if sum(path) > target:
                return 

            for i in range(startIndex, len(candidates)):
                if i > startIndex and candidates[i] == candidates[i - 1]:
                    continue
                path.append(candidates[i])
                dfs(i + 1, path)
                path.pop()

        res = []
        dfs(0, [])
        return res