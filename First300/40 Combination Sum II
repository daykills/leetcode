class Solution:
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        candidates.sort()
        def dfs(path, startIndex, sums):
            if sums == target:
                result.append(path[:])
                return 

            for i in range(startIndex, len(candidates)):
                if sums + candidates[i] > target:
                    return 
                if i > startIndex and candidates[i] == candidates[i - 1]:
                    continue
                dfs(path + [candidates[i]], i + 1, sums + candidates[i])

        result = []
        dfs([], 0, 0)
        return result