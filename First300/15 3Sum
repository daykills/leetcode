class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        res = set()

        for i in range(len(nums) - 2):
            if i > 0 and nums[i] == nums[i - 1]:
              continue
            lo = i + 1
            hi = len(nums) - 1

            while lo < hi:
                sums = nums[i] + nums[lo] + nums[hi]
                if sums == 0:
                    res.add((nums[i], nums[lo], nums[hi]))
                    lo += 1
                    hi -= 1
                elif sums > 0:
                    hi -= 1
                else:
                    lo += 1
        return res

时间复杂度： O(n^2)
空间复杂度： O(logn), 额外的排序的空间复杂度