class Solution:
    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:
        nums.sort()
        n = len(nums)
        res = set()
        
        for i in range(n - 3):
            for j in range(i + 1, n - 2):
                l = j + 1
                r = n - 1
                
                while l < r:
                    sums = nums[i] + nums[j] + nums[l] + nums[r]
                    if sums == target:
                        res.add((nums[i], nums[j], nums[l], nums[r]))
                        l += 1
                        r -= 1
                    elif sums > target:
                        r -= 1
                    else:
                        l += 1
        return res
时间复杂度： O(n^3)
空间复杂度： O(logn), 额外的排序的空间复杂度