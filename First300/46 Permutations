class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        path = []
        res =[]
        visited = [True] * len(nums)
        
        def backtrack(path):
            if len(path) == len(nums):
                res.append(path[::])
                return
            
            for i in range(len(nums)):
                if not visited[i]:
                    continue
                visited[i] = False
                backtrack(path + [nums[i]])
                visited[i] = True
            
        backtrack(path)
        return res